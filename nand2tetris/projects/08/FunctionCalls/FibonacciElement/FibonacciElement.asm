(Main.fibonacci$f)
//start Push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//end Push argument 0
//start Push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//end Push constant 2
//lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=D-M
@TRUE0
D;JGT
D=0
@END_COMPARISON0
0;JMP
(TRUE0)
D=-1
@END_COMPARISON0
0;JMP
(END_COMPARISON0)
@SP
A=M
M=D
@SP
M=M+1
//lt end
@SP
M=M-1
@SP
A=M
D=M
@Main.fibonacci$IF_TRUE
D;JNE
@Main.fibonacci$IF_FALSE
0;JMP
(Main.fibonacci$IF_TRUE)
//start Push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//end Push argument 0
@LCL
D=M
@R14
M=D
@R14
D=M
@5
A=D-A
D=M
@R15
M=D
//start Pop argument 0
//Argument0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
//endArgument0
//end Pop argument 0
@ARG
D=M
D=D+1
@SP
M=D
@R14
D=M
@1
A=D-A
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
A=M
0;JMP
(Main.vm.IF_FALSE)
//start Push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//end Push argument 0
//start Push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//end Push constant 2
//sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//sub end
@Main.vm.Main.fibonaccireturn
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@LCL
D=M
@SP
M=D
@Main.vm.Main.fibonacci
0;JMP
(Main.vm.Main.vm.Main.fibonaccireturn)
//start Push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//end Push argument 0
//start Push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//end Push constant 1
//sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//sub end
@Main.vm.Main.fibonaccireturn
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@LCL
D=M
@SP
M=D
@Main.vm.Main.fibonacci
0;JMP
(Main.vm.Main.vm.Main.fibonaccireturn)
//add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=D+M
@SP
A=M
M=D
@SP
M=M+1
//add end
@LCL
D=M
@R14
M=D
@R14
D=M
@5
A=D-A
D=M
@R15
M=D
//start Pop argument 0
//Argument0
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
//endArgument0
//end Pop argument 0
@ARG
D=M
D=D+1
@SP
M=D
@R14
D=M
@1
A=D-A
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
A=M
0;JMP
(Sys.init$f)
//start Push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//end Push constant 4
@Sys.init$Main.fibonaccireturn
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@LCL
D=M
@SP
M=D
@Sys.init$Main.fibonacci
0;JMP
(Sys.init$Sys.init$Main.fibonaccireturn)
(Sys.init$WHILE)
@Sys.init$WHILE
0;JMP
